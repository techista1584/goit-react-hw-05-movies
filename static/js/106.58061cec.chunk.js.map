{"version":3,"file":"static/js/106.58061cec.chunk.js","mappings":"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","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/CastListItem/CastListItem.module.css?e493","components/CastListItem/CastListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '93c5c174fe2da474d1c166441f51e711';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n    api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day`);\n    return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n    const response = await axios.get(`search/movie?query=${movieName}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}`);\n    return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastListItem_castList__z8-GV\",\"castListImage\":\"CastListItem_castListImage__1FBQ1\"};","import PropTypes from 'prop-types';\nimport css from './CastListItem.module.css'\n\nexport const CastListItem = ({ profilePath, originalName, name }) => {\n  return (\n    <div className={css.castListContainer}>\n      <li className={css.castList}>\n      <img className={css.castListImage}\n        width=\"200\"\n        height=\"300\"\n        src={\n          profilePath\n            ? `https://image.tmdb.org/t/p/w300${profilePath}`\n            : `https://fakeimg.pl/600x400?text=No+Image+Available`\n        }\n        alt={originalName}\n      />\n      <p className={css.castListName}>{name}</p>\n    </li>\n    </div>\n  );\n};\n\nCastListItem.propTypes = {\n  profilePath: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  originalName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"castListContainer\":\"CastList_castListContainer__n+x8D\",\"noCast\":\"CastList_noCast__QcFkb\"};","import { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'api/api';\nimport { CastListItem } from '../CastListItem/CastListItem';\nimport css from './CastList.module.css'\n\nconst CastList = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  const fetchCast = useCallback(async () => {\n    try {\n      const response = await fetchMovieCast(movieId);\n      // Check if response is an array, if not set it to an empty array\n      setCast(Array.isArray(response) ? response : []);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchCast();\n  }, [fetchCast]);\n\n  return (\n    <>\n      {cast.length !== 0 ? (\n        <div>\n          <h2>Movie Cast</h2>\n          <ul className={css.castListContainer}>\n            {cast.map(({ id, profile_path, original_name, name }) => (\n              <CastListItem\n                key={id}\n                id={id}\n                profilePath={profile_path}\n                originalName={original_name}\n                name={name}\n              />\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div>We don't have any cast for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default CastList;"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","CastListItem","profilePath","originalName","name","_jsx","className","css","children","_jsxs","width","height","src","alt","useParams","_useState","useState","_useState2","_slicedToArray","setCast","fetchCast","useCallback","Array","isArray","t0","console","error","useEffect","_Fragment","length","map","id","profile_path","original_name"],"sourceRoot":""}