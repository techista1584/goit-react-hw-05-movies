{"version":3,"file":"static/js/813.1c582869.chunk.js","mappings":"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","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/pages/Movies/Movies.module.css?078c","components/pages/Movies/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '93c5c174fe2da474d1c166441f51e711';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n    api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day`);\n    return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n    const response = await axios.get(`search/movie?query=${movieName}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}`);\n    return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"li\":\"MovieList_li__kXkJl\",\"links\":\"MovieList_links__joP2W\",\"card\":\"MovieList_card__j2UPv\",\"img\":\"MovieList_img__Tmz2C\"};","import PropTypes from 'prop-types';\nimport { Outlet, useLocation, Link } from 'react-router-dom';\nimport { AiOutlineFileImage } from 'react-icons/ai';\nimport css from './MovieList.module.css';\nimport Loader from 'Loader/Loader';\nimport { useState, useEffect } from 'react';\n\nexport const MovieList = ({ movies }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movies.length > 0) {\n      setIsLoading(false);\n    }\n  }, [movies]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader isLoading={isLoading} />\n      ) : (\n        <ul className={css.list}>\n          {movies.map(({ id, title, poster_path }) => {\n            return (\n              <li className={css.li} key={id}>\n                <Link className={css.links} to={`/movies/${id}`} state={{ from: location }}>\n                  <div className={css.card}>\n                    {poster_path ? (\n                      <img\n                        className={css.img}\n                        src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                        alt={title}\n                      />\n                    ) : (\n                      <AiOutlineFileImage size={200} />\n                    )}\n                    {title}\n                  </div>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"Movies_inputWrapper__hwTjJ\",\"input\":\"Movies_input__aaq4I\"};","import React, { useEffect, useState, useCallback } from 'react';\nimport css from './Movies.module.css';\nimport { fetchMovieByQuery } from 'api/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [movies, SetMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? 'Friends';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const fetchMovies = useCallback(async () => {\n    if (!movieName.trim()) return;\n    try {\n      const movies = await fetchMovieByQuery(movieName);\n      SetMovies(movies);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [movieName]);\n\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n\n  return (\n    <div>\n      <form className={css.inputWrapper}>\n        <input type=\"text\" name=\"movie\" className={css.input}\n          placeholder=\"Search movies...\"\n          onChange={event => updateQueryString(event.target.value)}\n        />\n      </form>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","MovieList","movies","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","location","useLocation","useEffect","length","_jsxs","_Fragment","children","_jsx","Loader","className","css","map","id","title","poster_path","Link","to","state","from","src","alt","AiOutlineFileImage","size","Outlet","_searchParams$get","SetMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","fetchMovies","useCallback","_movies","trim","t0","console","error","type","name","placeholder","onChange","event","query","target","value"],"sourceRoot":""}